https://www.rust-lang.org/  ==> Main website
https://play.rust-lang.org/  ==> On line compiler

https://users.rust-lang.org/  ==> Users forum

https://doc.rust-lang.org/book/ch02-00-guessing-game-tutorial.html  ==> book
https://doc.rust-lang.org/stable/rust-by-example/  ===> program with explanation
https://doc.rust-lang.org/cargo/  ===> cargo book

////////////////////////////////////////////////////////////////////////////
MY STACK-OVERFLOW QUESTIONS LINK:
----------------------------------
https://lifthrasiir.github.io/rustlog/why-is-a-rust-executable-large.html
https://stackoverflow.com/questions/65549851/hello-world-program-binary-file-size-more-in-case-of-rust

https://users.rust-lang.org/t/rust-hello-world-binary-file-size-is-huge/53620  ===> Question ask in rust community



/////////////////////////////////////////////////////////////////////////////
https://stackoverflow.com/users/2791083/user2791083  ==> Stack over flow link

https://stackoverflow.com/questions/tagged/rust  ==> stack overflow

https://www.rust-lang.org/learn  ===> Document page.

https://doc.rust-lang.org/book/  ===> This is the book. You will get this url from above url.
Topic Cover In above Book:
---------------------------
1> Common Programming Concepts (chapter - 3)

TOPIC COVER:
-------------
1> Number on the Computer (chapter-6)

/////////////////////////////////////////////////

Steps For install RUST:
-----------------------
https://www.rust-lang.org/tools/install

rustup update  ===> Update to latest rust version
rustup self uninstall  ==> For complete uninstall rust

cargo new satya --bin  ===> This will create sample hellw world project
cargo run ===> will run and create all the dependecy and execute code and provides o/p
cargo build --release  ===> This will create release build
cargo run --bin hello   ===> Use this if you have 2 binary in ur project. If u want 2 binary inside cargo put ur other binary inside src/bin folder and run the above command.

    We can build a project using cargo build.
    We can build and run a project in one step using cargo run.
    We can build a project without producing a binary to check for errors using cargo check.
    Instead of saving the result of the build in the same directory as our code, Cargo stores it in the target/debug directory.

NOTE: use repetedly cargo check either ur program compile successfully or not.

rustc -C prefer-dynamic=yes 1.rs  ===> Run this methode for dynamic link but after that binary is not running.
